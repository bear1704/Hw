< 대본 > 
안녕하세요 119 화재 신고 시스템을 모델링한 13박수찬 13김종민 13김우찬입니다. 
저희는 119 화재 신고 시스템을 구현하려 했으며 이 시스템은 화재 발생을 신고하는 신고 
자인 Reporter, 화재 신고를 받는 신고 수신자인 Receiver, 수신자의 신고 정보를 받고 소방 
관을 출동시키는 소방서인 FireStation, 출동하는 소방관인 FireMan으로 이루어져 있습니다. 
우선 패키지 다이어그램입니다. 일단 이 프로그램에는 3개의 패키지가 있습니다. Reporter 
클래스와 Receiver 클래스를 담고 있는 Report System 패키지, FireStation 클래스와 
Fireman 클래스를 담고 있는 FireStation System 패키지, 마지막으로 각종 소방서 위치와 소 
방관 수, 소방관 장비 현황 DB를 담고 있는 Data 패키지가 있습니다. Receiver와 FireStation 
클래스가 서로 의존관계가 되어 있는데 이는 Receiver가 지정한 FireStation의 출동 가능 여 
부를 파악하기 위해서 설정된 것입니다. 그리고 Data 패키지의 의존관계에서 Receiver 클래 
스는 출동 가능 소방서 위치를 가지고 있는 FireStation Location DB를, FireStation 클래스는 
자기 소방서의 소방관 수와 장비현황을 가지고 있는 Fireman Amount DB와 Fireman 
Equipment DB를 access합니다.

< 대본 > 
다음은 인터렉션 다이어그램입니다. 신고자가 불을 보고 (Fire을 가리키며) 신고를 하면 
(receiveMessage를 가리키며) 신고 수신자가 이 신고를 받아서 화재 현장에 가장 가깝고 적 
절한 소방서가 있는지 확인합니다. (searchFireStation을 가리키며) 그래서 적절한 위치의 소 
방서를 확인하면 해당 소방서에게 출동가능여부를 물어보고 (PossibleMov를 가리키며) 출동 
이 가능하다면 해당 소방서를 호출합니다. 소방서는 create를 통해 (create를 가리키며) 적 
절한 장비와 소방차를 갖춘 소방관 객체를 생성합니다. 소방관은 출동 한 뒤 진압 작업을 
하기 전 소방서에 적절한 상황을 보고 한 뒤, 화재 진압을 하고 화재 현장에서 다친 사람이 
있다면 그 사람을 구조합니다. (extinguish를 가리키며) 구조 작업이 끝나면 소방관 객체를 
제거하고 종료합니다.

< 대본 > 
다음은 클래스 다이어그램입니다. 클래스 다이어그램은 다음과 같이 앞서 말한 4개의 클래 
스로 구성되어 있습니다.

< 대본 > 
다음은 Grasp를 적용한 클래스 다이어그램입니다. Information Expert의 경우, 이미 각 클래 
스가 자기에게 맞는 정보를 가지고 적절한 역할을 수행한다고 보아 수정하지 않았습니다. 
Creator의 경우, FireStation이 FireMan을 생성하는데 필요한 위치, 화재상황과 소방장비 등 
의 정보를 가지고 있으므로 FireStation이 Fireman을 생성하는게 합당하다고 생각해 변경하 
지 않았습니다. Low Coupling의 경우도, 신고자-수신자-소방서-소방관이 순서대로 진행되고 
서로 불필요한 결합이 없으므로 변경하지 않았습니다. High Cohesion의 경우 Fireman은 현 
재 화재현장 구조와 화재 진압을 둘 다 하고 있는데 이 두 가지의 활동과 보고를 한 클래스 
로 관리하기엔 응집도가 낮다고 판단되어 High Cohesion을 지향하기 위해 FireMan을 구조 
자와 소방관으로 분할하였습니다. 
발표 내용은 이상입니다. 질문 있으십니까? 
없으면 발표 마치겠습니다.

